{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesc\\\\OneDrive\\\\Documents\\\\projects\\\\tewin-app\\\\src\\\\Home\\\\Forecast\\\\Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast() {\n  _s();\n  const [Forecast, setForecast] = useState([]); // Initialize with null\n  const [CurrentCity, setCurrentCity] = useState();\n  useEffect(() => {\n    const url = \"http://api.weatherapi.com/v1/forecast.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&days=3&aqi=no&alerts=no\"; // Replace with your API key\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data.forecast && data.forecast.forecastday.day.maxtemp_f) {\n          setForecast(data.forecast.forecastday.day.maxtemp_f); // Set the temperature value\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n_s(Forecast, \"NLw5j7Eq6m8fywoGHeQ6Rj4BEsM=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Forecast","_s","setForecast","CurrentCity","setCurrentCity","url","fetchData","response","fetch","data","json","console","log","forecast","forecastday","day","maxtemp_f","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesc/OneDrive/Documents/projects/tewin-app/src/Home/Forecast/Forecast.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Forecast() {\r\n\tconst [Forecast, setForecast] = useState([]); // Initialize with null\r\n\tconst [CurrentCity, setCurrentCity] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst url =\r\n\t\t\t\"http://api.weatherapi.com/v1/forecast.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&days=3&aqi=no&alerts=no\"; // Replace with your API key\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\r\n\t\t\t\tif (data.forecast && data.forecast.forecastday.day.maxtemp_f) {\r\n\t\t\t\t\tsetForecast(data.forecast.forecastday.day.maxtemp_f); // Set the temperature value\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"error\", error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>TEST</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACD,QAAQ,EAAEE,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACf,MAAMS,GAAG,GACR,+GAA+G,CAAC,CAAC;;IAElH,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;QACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QAEjB,IAAIA,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACI,QAAQ,CAACC,WAAW,CAACC,GAAG,CAACC,SAAS,EAAE;UAC7Dd,WAAW,CAACO,IAAI,CAACI,QAAQ,CAACC,WAAW,CAACC,GAAG,CAACC,SAAS,CAAC,CAAC,CAAC;QACvD;MACD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEK,KAAK,CAAC;MAC5B;IACD,CAAC;IAEDX,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCP,OAAA;IAAAmB,QAAA,eACCnB,OAAA;MAAAmB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAER;AAACrB,EAAA,CA9BQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}