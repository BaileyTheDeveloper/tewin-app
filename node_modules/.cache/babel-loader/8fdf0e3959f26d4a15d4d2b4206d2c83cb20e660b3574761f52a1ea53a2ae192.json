{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesc\\\\OneDrive\\\\Documents\\\\projects\\\\tewin-app\\\\src\\\\Home\\\\Forecast\\\\Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast() {\n  _s();\n  const [Forecast, setForecast] = useState([]);\n  const [CurrentCity, setCurrentCity] = useState();\n  useEffect(() => {\n    const url = \"http://api.weatherapi.com/v1/forecast.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&days=3&aqi=no&alerts=no\";\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data.forecast && data.forecast.forecastday) {\n          setForecast(data.forecast.forecastday);\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const formatDate = dateStr => {\n    const dateObj = new Date(dateStr);\n    return dateObj.toLocaleString(\"default\", {\n      month: \"short\",\n      day: \"numeric\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecastWrapper\",\n    children: Forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecastContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"forecastHeader\",\n        children: [formatDate(day.date), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"forecastHeader\",\n        children: [\"High temp: \", day.day.maxtemp_f, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)]\n    }, day.date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n_s(Forecast, \"NLw5j7Eq6m8fywoGHeQ6Rj4BEsM=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Forecast","_s","setForecast","CurrentCity","setCurrentCity","url","fetchData","response","fetch","data","json","console","log","forecast","forecastday","error","formatDate","dateStr","dateObj","Date","toLocaleString","month","day","className","children","map","date","fileName","_jsxFileName","lineNumber","columnNumber","maxtemp_f","_c","$RefreshReg$"],"sources":["C:/Users/thesc/OneDrive/Documents/projects/tewin-app/src/Home/Forecast/Forecast.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./forecast.css\";\r\n\r\nfunction Forecast() {\r\n\tconst [Forecast, setForecast] = useState([]);\r\n\tconst [CurrentCity, setCurrentCity] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst url =\r\n\t\t\t\"http://api.weatherapi.com/v1/forecast.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&days=3&aqi=no&alerts=no\";\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\r\n\t\t\t\tif (data.forecast && data.forecast.forecastday) {\r\n\t\t\t\t\tsetForecast(data.forecast.forecastday);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"error\", error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst formatDate = (dateStr) => {\r\n\t\tconst dateObj = new Date(dateStr);\r\n\t\treturn dateObj.toLocaleString(\"default\", {\r\n\t\t\tmonth: \"short\",\r\n\t\t\tday: \"numeric\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"forecastWrapper\">\r\n\t\t\t{Forecast.map((day) => (\r\n\t\t\t\t<div className=\"forecastContainer\" key={day.date}>\r\n\t\t\t\t\t<h1 className=\"forecastHeader\">{formatDate(day.date)}:</h1>\r\n\t\t\t\t\t<h1 className=\"forecastHeader\">High temp: {day.day.maxtemp_f}Â°F</h1>\r\n\t\t\t\t\t<h2></h2>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACD,QAAQ,EAAEE,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACf,MAAMS,GAAG,GACR,+GAA+G;IAEhH,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;QACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QAEjB,IAAIA,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACI,QAAQ,CAACC,WAAW,EAAE;UAC/CZ,WAAW,CAACO,IAAI,CAACI,QAAQ,CAACC,WAAW,CAAC;QACvC;MACD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,KAAK,CAAC;MAC5B;IACD,CAAC;IAEDT,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,UAAU,GAAIC,OAAO,IAAK;IAC/B,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IACjC,OAAOC,OAAO,CAACE,cAAc,CAAC,SAAS,EAAE;MACxCC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACN,CAAC,CAAC;EACH,CAAC;EAED,oBACCvB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC9BxB,QAAQ,CAACyB,GAAG,CAAEH,GAAG,iBACjBvB,OAAA;MAAKwB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACjCzB,OAAA;QAAIwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAAER,UAAU,CAACM,GAAG,CAACI,IAAI,CAAC,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3D/B,OAAA;QAAIwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAAC,aAAW,EAACF,GAAG,CAACA,GAAG,CAACS,SAAS,EAAC,OAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpE/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAH8BR,GAAG,CAACI,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI3C,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER;AAAC7B,EAAA,CA5CQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}