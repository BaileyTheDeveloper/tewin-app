{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesc\\\\OneDrive\\\\Documents\\\\projects\\\\tewin-app\\\\src\\\\Home\\\\CurrentWeather\\\\CurrentWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./currentweather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentWeather() {\n  _s();\n  const [currentTemp, setCurrentTemp] = useState(null); // Initialize with null\n  const [CurrentCity, setCurrentCity] = useState();\n  useEffect(() => {\n    const url = \"http://api.weatherapi.com/v1/current.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&aqi=no\"; // Replace with your API key\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data.current && data.current.temp_f) {\n          setCurrentTemp(data.current.temp_f); // Set the temperature value\n          setCurrentCity(data.location.name);\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"currentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current temperature in \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }, this), CurrentCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currentTemp !== null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"currentHeading\",\n        children: [currentTemp, \" \\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this) : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n_s(CurrentWeather, \"ixGjRQRXqCzrVH+yvs2/0QoYIYA=\");\n_c = CurrentWeather;\nexport default CurrentWeather;\nvar _c;\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CurrentWeather","_s","currentTemp","setCurrentTemp","CurrentCity","setCurrentCity","url","fetchData","response","fetch","data","json","console","log","current","temp_f","location","name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/thesc/OneDrive/Documents/projects/tewin-app/src/Home/CurrentWeather/CurrentWeather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./currentweather.css\";\r\n\r\nfunction CurrentWeather() {\r\n\tconst [currentTemp, setCurrentTemp] = useState(null); // Initialize with null\r\n\tconst [CurrentCity, setCurrentCity] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst url =\r\n\t\t\t\"http://api.weatherapi.com/v1/current.json?key=6be74bb2ba6f4ad6a3121019231208&q=65807&aqi=no\"; // Replace with your API key\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\r\n\t\t\t\tif (data.current && data.current.temp_f) {\r\n\t\t\t\t\tsetCurrentTemp(data.current.temp_f); // Set the temperature value\r\n\t\t\t\t\tsetCurrentCity(data.location.name);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"error\", error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<section className = \"currentContainer\">\r\n\t\t\t<h1>Current temperature in <br/>{CurrentCity}</h1>\r\n\t\t\t<h1>{currentTemp !== null ? <h1 id=\"currentHeading\">{currentTemp} Â°F</h1> : \"Loading...\"}</h1>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default CurrentWeather;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACf,MAAMU,GAAG,GACR,6FAA6F,CAAC,CAAC;;IAEhG,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;QACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QAEjB,IAAIA,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACI,OAAO,CAACC,MAAM,EAAE;UACxCZ,cAAc,CAACO,IAAI,CAACI,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;UACrCV,cAAc,CAACK,IAAI,CAACM,QAAQ,CAACC,IAAI,CAAC;QACnC;MACD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEK,KAAK,CAAC;MAC5B;IACD,CAAC;IAEDX,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCR,OAAA;IAASoB,SAAS,EAAG,kBAAkB;IAAAC,QAAA,gBACtCrB,OAAA;MAAAqB,QAAA,GAAI,yBAAuB,eAAArB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAACpB,WAAW;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDzB,OAAA;MAAAqB,QAAA,EAAKlB,WAAW,KAAK,IAAI,gBAAGH,OAAA;QAAI0B,EAAE,EAAC,gBAAgB;QAAAL,QAAA,GAAElB,WAAW,EAAC,QAAG;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAAG;IAAY;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEZ;AAACvB,EAAA,CAhCQD,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAkCvB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}